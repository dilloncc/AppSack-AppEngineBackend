/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-02-14 18:40:25 UTC)
 * on 2014-02-27 at 04:01:57 UTC 
 * Modify at your own risk.
 */

package com.appsack.model.userendpoint;

/**
 * Service definition for Userendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UserendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Userendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the userendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://amiable-reducer-470.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "userendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Userendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Userendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getCurrentUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link GetCurrentUser#execute()} method to invoke the remote
   * operation.
   *
   * @param apiKey
   * @return the request
   */
  public GetCurrentUser getCurrentUser(java.lang.String apiKey) throws java.io.IOException {
    GetCurrentUser result = new GetCurrentUser(apiKey);
    initialize(result);
    return result;
  }

  public class GetCurrentUser extends UserendpointRequest<com.appsack.model.userendpoint.model.User> {

    private static final String REST_PATH = "user/{apiKey}";

    /**
     * Create a request for the method "getCurrentUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link GetCurrentUser#execute()} method to invoke the remote
     * operation. <p> {@link GetCurrentUser#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param apiKey
     * @since 1.13
     */
    protected GetCurrentUser(java.lang.String apiKey) {
      super(Userendpoint.this, "GET", REST_PATH, null, com.appsack.model.userendpoint.model.User.class);
      this.apiKey = com.google.api.client.util.Preconditions.checkNotNull(apiKey, "Required parameter apiKey must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCurrentUser setAlt(java.lang.String alt) {
      return (GetCurrentUser) super.setAlt(alt);
    }

    @Override
    public GetCurrentUser setFields(java.lang.String fields) {
      return (GetCurrentUser) super.setFields(fields);
    }

    @Override
    public GetCurrentUser setKey(java.lang.String key) {
      return (GetCurrentUser) super.setKey(key);
    }

    @Override
    public GetCurrentUser setOauthToken(java.lang.String oauthToken) {
      return (GetCurrentUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCurrentUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCurrentUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCurrentUser setQuotaUser(java.lang.String quotaUser) {
      return (GetCurrentUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCurrentUser setUserIp(java.lang.String userIp) {
      return (GetCurrentUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String apiKey;

    /**

     */
    public java.lang.String getApiKey() {
      return apiKey;
    }

    public GetCurrentUser setApiKey(java.lang.String apiKey) {
      this.apiKey = apiKey;
      return this;
    }

    @Override
    public GetCurrentUser set(String parameterName, Object value) {
      return (GetCurrentUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertNewUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link InsertNewUser#execute()} method to invoke the remote
   * operation.
   *
   * @param email
   * @param password
   * @param firstName
   * @param lastName
   * @param displayName
   * @return the request
   */
  public InsertNewUser insertNewUser(java.lang.String email, java.lang.String password, java.lang.String firstName, java.lang.String lastName, java.lang.String displayName) throws java.io.IOException {
    InsertNewUser result = new InsertNewUser(email, password, firstName, lastName, displayName);
    initialize(result);
    return result;
  }

  public class InsertNewUser extends UserendpointRequest<com.appsack.model.userendpoint.model.AuthResponse> {

    private static final String REST_PATH = "authresponse/{email}/{password}/{firstName}/{lastName}/{displayName}";

    /**
     * Create a request for the method "insertNewUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link InsertNewUser#execute()} method to invoke the remote
     * operation. <p> {@link InsertNewUser#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param email
     * @param password
     * @param firstName
     * @param lastName
     * @param displayName
     * @since 1.13
     */
    protected InsertNewUser(java.lang.String email, java.lang.String password, java.lang.String firstName, java.lang.String lastName, java.lang.String displayName) {
      super(Userendpoint.this, "POST", REST_PATH, null, com.appsack.model.userendpoint.model.AuthResponse.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
      this.firstName = com.google.api.client.util.Preconditions.checkNotNull(firstName, "Required parameter firstName must be specified.");
      this.lastName = com.google.api.client.util.Preconditions.checkNotNull(lastName, "Required parameter lastName must be specified.");
      this.displayName = com.google.api.client.util.Preconditions.checkNotNull(displayName, "Required parameter displayName must be specified.");
    }

    @Override
    public InsertNewUser setAlt(java.lang.String alt) {
      return (InsertNewUser) super.setAlt(alt);
    }

    @Override
    public InsertNewUser setFields(java.lang.String fields) {
      return (InsertNewUser) super.setFields(fields);
    }

    @Override
    public InsertNewUser setKey(java.lang.String key) {
      return (InsertNewUser) super.setKey(key);
    }

    @Override
    public InsertNewUser setOauthToken(java.lang.String oauthToken) {
      return (InsertNewUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertNewUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertNewUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertNewUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertNewUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertNewUser setUserIp(java.lang.String userIp) {
      return (InsertNewUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public InsertNewUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public InsertNewUser setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String firstName;

    /**

     */
    public java.lang.String getFirstName() {
      return firstName;
    }

    public InsertNewUser setFirstName(java.lang.String firstName) {
      this.firstName = firstName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String lastName;

    /**

     */
    public java.lang.String getLastName() {
      return lastName;
    }

    public InsertNewUser setLastName(java.lang.String lastName) {
      this.lastName = lastName;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String displayName;

    /**

     */
    public java.lang.String getDisplayName() {
      return displayName;
    }

    public InsertNewUser setDisplayName(java.lang.String displayName) {
      this.displayName = displayName;
      return this;
    }

    @Override
    public InsertNewUser set(String parameterName, Object value) {
      return (InsertNewUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appsack.model.userendpoint.model.User}
   * @return the request
   */
  public InsertUser insertUser(com.appsack.model.userendpoint.model.User content) throws java.io.IOException {
    InsertUser result = new InsertUser(content);
    initialize(result);
    return result;
  }

  public class InsertUser extends UserendpointRequest<com.appsack.model.userendpoint.model.User> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "insertUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link InsertUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * InsertUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appsack.model.userendpoint.model.User}
     * @since 1.13
     */
    protected InsertUser(com.appsack.model.userendpoint.model.User content) {
      super(Userendpoint.this, "POST", REST_PATH, content, com.appsack.model.userendpoint.model.User.class);
    }

    @Override
    public InsertUser setAlt(java.lang.String alt) {
      return (InsertUser) super.setAlt(alt);
    }

    @Override
    public InsertUser setFields(java.lang.String fields) {
      return (InsertUser) super.setFields(fields);
    }

    @Override
    public InsertUser setKey(java.lang.String key) {
      return (InsertUser) super.setKey(key);
    }

    @Override
    public InsertUser setOauthToken(java.lang.String oauthToken) {
      return (InsertUser) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertUser setQuotaUser(java.lang.String quotaUser) {
      return (InsertUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertUser setUserIp(java.lang.String userIp) {
      return (InsertUser) super.setUserIp(userIp);
    }

    @Override
    public InsertUser set(String parameterName, Object value) {
      return (InsertUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link ListUser#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListUser listUser() throws java.io.IOException {
    ListUser result = new ListUser();
    initialize(result);
    return result;
  }

  public class ListUser extends UserendpointRequest<com.appsack.model.userendpoint.model.CollectionResponseUser> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "listUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link ListUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * ListUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListUser() {
      super(Userendpoint.this, "GET", REST_PATH, null, com.appsack.model.userendpoint.model.CollectionResponseUser.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListUser setAlt(java.lang.String alt) {
      return (ListUser) super.setAlt(alt);
    }

    @Override
    public ListUser setFields(java.lang.String fields) {
      return (ListUser) super.setFields(fields);
    }

    @Override
    public ListUser setKey(java.lang.String key) {
      return (ListUser) super.setKey(key);
    }

    @Override
    public ListUser setOauthToken(java.lang.String oauthToken) {
      return (ListUser) super.setOauthToken(oauthToken);
    }

    @Override
    public ListUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListUser setQuotaUser(java.lang.String quotaUser) {
      return (ListUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListUser setUserIp(java.lang.String userIp) {
      return (ListUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListUser setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListUser setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListUser set(String parameterName, Object value) {
      return (ListUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "logInUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link LogInUser#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param password
   * @return the request
   */
  public LogInUser logInUser(java.lang.String email, java.lang.String password) throws java.io.IOException {
    LogInUser result = new LogInUser(email, password);
    initialize(result);
    return result;
  }

  public class LogInUser extends UserendpointRequest<com.appsack.model.userendpoint.model.AuthResponse> {

    private static final String REST_PATH = "logInUser/{email}/{password}";

    /**
     * Create a request for the method "logInUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link LogInUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * LogInUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param password
     * @since 1.13
     */
    protected LogInUser(java.lang.String email, java.lang.String password) {
      super(Userendpoint.this, "POST", REST_PATH, null, com.appsack.model.userendpoint.model.AuthResponse.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public LogInUser setAlt(java.lang.String alt) {
      return (LogInUser) super.setAlt(alt);
    }

    @Override
    public LogInUser setFields(java.lang.String fields) {
      return (LogInUser) super.setFields(fields);
    }

    @Override
    public LogInUser setKey(java.lang.String key) {
      return (LogInUser) super.setKey(key);
    }

    @Override
    public LogInUser setOauthToken(java.lang.String oauthToken) {
      return (LogInUser) super.setOauthToken(oauthToken);
    }

    @Override
    public LogInUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LogInUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LogInUser setQuotaUser(java.lang.String quotaUser) {
      return (LogInUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public LogInUser setUserIp(java.lang.String userIp) {
      return (LogInUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public LogInUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public LogInUser setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public LogInUser set(String parameterName, Object value) {
      return (LogInUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link RemoveUser#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveUser removeUser(java.lang.Long id) throws java.io.IOException {
    RemoveUser result = new RemoveUser(id);
    initialize(result);
    return result;
  }

  public class RemoveUser extends UserendpointRequest<Void> {

    private static final String REST_PATH = "user/{id}";

    /**
     * Create a request for the method "removeUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link RemoveUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * RemoveUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveUser(java.lang.Long id) {
      super(Userendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveUser setAlt(java.lang.String alt) {
      return (RemoveUser) super.setAlt(alt);
    }

    @Override
    public RemoveUser setFields(java.lang.String fields) {
      return (RemoveUser) super.setFields(fields);
    }

    @Override
    public RemoveUser setKey(java.lang.String key) {
      return (RemoveUser) super.setKey(key);
    }

    @Override
    public RemoveUser setOauthToken(java.lang.String oauthToken) {
      return (RemoveUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveUser setQuotaUser(java.lang.String quotaUser) {
      return (RemoveUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveUser setUserIp(java.lang.String userIp) {
      return (RemoveUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveUser setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveUser set(String parameterName, Object value) {
      return (RemoveUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateUser".
   *
   * This request holds the parameters needed by the the userendpoint server.  After setting any
   * optional parameters, call the {@link UpdateUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appsack.model.userendpoint.model.User}
   * @return the request
   */
  public UpdateUser updateUser(com.appsack.model.userendpoint.model.User content) throws java.io.IOException {
    UpdateUser result = new UpdateUser(content);
    initialize(result);
    return result;
  }

  public class UpdateUser extends UserendpointRequest<com.appsack.model.userendpoint.model.User> {

    private static final String REST_PATH = "user";

    /**
     * Create a request for the method "updateUser".
     *
     * This request holds the parameters needed by the the userendpoint server.  After setting any
     * optional parameters, call the {@link UpdateUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * UpdateUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appsack.model.userendpoint.model.User}
     * @since 1.13
     */
    protected UpdateUser(com.appsack.model.userendpoint.model.User content) {
      super(Userendpoint.this, "PUT", REST_PATH, content, com.appsack.model.userendpoint.model.User.class);
    }

    @Override
    public UpdateUser setAlt(java.lang.String alt) {
      return (UpdateUser) super.setAlt(alt);
    }

    @Override
    public UpdateUser setFields(java.lang.String fields) {
      return (UpdateUser) super.setFields(fields);
    }

    @Override
    public UpdateUser setKey(java.lang.String key) {
      return (UpdateUser) super.setKey(key);
    }

    @Override
    public UpdateUser setOauthToken(java.lang.String oauthToken) {
      return (UpdateUser) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateUser setQuotaUser(java.lang.String quotaUser) {
      return (UpdateUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateUser setUserIp(java.lang.String userIp) {
      return (UpdateUser) super.setUserIp(userIp);
    }

    @Override
    public UpdateUser set(String parameterName, Object value) {
      return (UpdateUser) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Userendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Userendpoint}. */
    @Override
    public Userendpoint build() {
      return new Userendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UserendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUserendpointRequestInitializer(
        UserendpointRequestInitializer userendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(userendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
